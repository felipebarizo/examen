#REv2024
#R BASE
```{r}
set.seed(123)
var1 <- sample(c(2,3,4), size = 12, replace = TRUE)
var2 <- sample(c("alto", "medio", "bajo"), size = 12, replace = TRUE)
var3 <- sample(c("TRUE", "FALSE"), size = 12,replace = TRUE)
datos <- data.frame(var1,var2,var3)

```

```{r}
datos[,"var3"]
```

```{r}
datos[datos$var1 == 3 & datos$var2== "medio" & datos$var3 == "FALSE",]
```

```{r}
datos[datos$var2 == c("medio","alto"),]
```

```{r}
table(datos$var2,datos$var3)

```

```{r}
for (i in 1:length(var2)) {
  if ((datos$var2[i] == "alto" & datos$var3[i] == "TRUE")||(datos$var2[i] == "medio" & datos$var3[i] == "TRUE")){
    datos$var4[i] <- 1
  }else{
    datos$var4[i] <- 0
  }
}
datos
```

#REV 2025
```{r}
set.seed(12345)
ingresos <- runif(12, min = 30000,max = 70000)
```

```{r}
mean(ingresos)
max(ingresos)
min(ingresos)

```

```{r}
ingresos_altos <- ingresos[ingresos > 50000]
```

```{r}
clasificacion_mensual <- NULL
for (i in 1:length(ingresos)) {
  if(ingresos[i] <= mean(ingresos)){
    clasificacion_mensual[i] <- "bajo"
  } else {
      clasificacion_mensual[i] <- "alto"
    }
}
print(clasificacion_mensual)
```

```{r}
percentil75 <- quantile(ingresos, 0.75)
which(ingresos>percentil75)

```

```{r}
media <- mean(ingresos)
sd <- sd(ingresos)
cv <- (sd/media)*100
cv
"El CV de 24.86% indica que el desvío estándar de los ingresos representa cerca del 25% de la media.
Esto implica una variabilidad moderada en los ingresos mensuales:
hay cierta dispersión, pero no es extremadamente alta."
```



#TIDYVERSE

```{r}
library(readxl)
library(here)
tic <- read_xlsx(here("examen","eutic (2).xlsx"))

```

```{r}
tic_red <- tic[,c(23:25,54:71)]

```

```{r}
library(ggplot2)
library(tidyverse)
tic_red |> mutate(C9 = recode(C9, "1" = "Si","2"  ="No" )) |> ggplot(aes(x = C9, fill= C9))+ geom_bar() + labs(x = "Usa Internet",y = "Cantidad de Personas", fill = "Respuesta")

```

```{r}
tic_reco <- tic_red |> rename("usoint" = C9, "sexo" = C7) |> mutate(usoint =as.factor(usoint), sexo = as.factor(sexo)) |> 
  mutate(usoint = recode(usoint,"1" = "Si","2"="No"), sexo = recode(sexo,"1"="Hombre", "2" = "Mujer"))

```

```{r}
tic_reco |> ggplot(aes(x = usoint, fill= usoint))+ geom_bar()+  labs(x = "Usa Internet",y = "Cantidad de Personas", fill = "Respuesta")
```

```{r}
tic_reco |> count(usoint) |> mutate(prop = n/sum(n)) |> ggplot(aes(x = usoint, y = prop, fill = usoint)) + geom_col() +
    labs(x = "Usa Internet",y = "Proporción de la poblacion que usa internet", fill = "Respuesta")
```

```{r}
library(dplyr)
tic_reco |> count(usoint,sexo) |> mutate(prop = n/sum(n)) |> filter(sexo == "Mujer", usoint == "Si")
```

```{r}
tic_reco |> group_by(sexo)|> filter(usoint == "No")|> summarise(prom_Edad_no_usoint = mean(C8,na.rm = TRUE))


tic_reco |> ggplot(aes(x = C8,fill = usoint)) + geom_histogram(bins = 30,color = "black") + labs(title = "Distribucion de edades que nunca usaron internet", x = "Edades", y = "Cantidad de Gente")+ facet_wrap(~sexo) + theme_bw()

tic_reco |> group_by(C8) |> ggplot(aes(x = C8, fill = usoint)) + geom_histogram(bins = 30,color = "black") + facet_wrap(~sexo) + theme_bw()+ 
  labs(x = "Edades segun sexo", y = "Cantidad de individuos por edad", fill = "Usa Internet")
```

```{r}
final <- tic_reco|> filter(!is.na(C14_1:C14_18)) |> mutate(across(C14_1:C14_18,~recode(.x,"1" = "Si", "2" = "No", "3" = "No contesta")))

final <- tic_reco |> 
  mutate(across(C14_1:C14_18, ~ recode(as.character(.x),
                                       "1" = "Si",
                                       "2" = "No",
                                       "3" = "No contesta"))) |>
  filter(if_all(C14_1:C14_18, ~ !is.na(.x)))

```

#REV 2025

```{r}
library(modeldata)
data("lending_club")
```

```{r}
lending_club |> filter(funded_amnt>10000)
```

```{r}
lending_club|> filter(term == "term_36")
```

```{r}
lending_club |> group_by(verification_status) |> summarise(prom_funded_amnt = mean(funded_amnt), prom_annual_inc = mean(annual_inc))
```

```{r}
lending_club |> ggplot(aes(x = funded_amnt, y = annual_inc, col = verification_status)) + geom_point()
```

```{r}
lending_club |> ggplot(aes(x = funded_amnt, y = annual_inc, col = verification_status)) + geom_point() + facet_wrap(~Class)

```

```{r}

lending_club |> ggplot(aes(x = int_rate, y = Class, fill = Class)) + geom_violin()

```

```{r}

lending_club |> mutate(across(c(funded_amnt,annual_inc,int_rate),~ .x - mean(.x,na.rm = TRUE), .names = "{.col}_media_cero")) |> select(funded_amnt_media_cero,annual_inc_media_cero, int_rate_media_cero)
lending_club |> mutate(across(c(funded_amnt,annual_inc,int_rate),~scale(.x), .names = "{.col}_media_cero")) |> select(funded_amnt_media_cero,annual_inc_media_cero, int_rate_media_cero)
 
```

```{r} 
lending_club |> group_by(Class)|> summarise(across(where(is.numeric),list(media = ~mean(.x, na.rm = TRUE),desviacion_estandar = ~sd(.x,na.rm = TRUE)), .names = "{.col}_{.fn}"))


```

```{r}
df <- lending_club |> transmute(ratio_ingreso_monto = annual_inc/funded_amnt, tasa_normalizada =pnorm(int_rate,mean = mean(int_rate),sd = sd(int_rate)), Class)
```

```{r}
df |> ggplot(aes(x = ratio_ingreso_monto, y = Class, fill = Class)) + geom_boxplot()
```

#VARIOS

```{r}
pedidos <- function(cprod,cdisp){
  if (!is.numeric(cprod)|| !is.numeric(cdisp)) {
    cat("Argumento no numérico\n")
    return(invisible(NULL))
    }
  if(length(cprod)!=length(cdisp)) {
    stop("No tiene mismo largo")
  }
  if(all(cdisp >= cprod)){
    return(1)}
  else{
    return(0)
  }
}

pedidos(c(1,4,2), 1:2)
pedidos(c("A","B"), 1:19)
```

```{r}
set.seed(123)
randnorm <- rnorm(24, mean = 20, sd = 2)
randbin <- rbinom(24,size = 10,prob = 0.5)

i <- 1
suma <- NULL
while (i <= 24) {
  suma[i] <- randnorm[i] + randbin[i] 
  i <- i + 1
}
suma
length(suma)

```

```{r}
"Es preferible dado que tenemos una mejor percepción visual de las frecuencias para cada observacion, el grafico de torta depende de el área y ángulo de mismo el cual dificulta a veces la percepción de la frecuencia" 

```

```{r}
"Utilizar aspect.ratio = 1 en un diagrama de dispersión (scatter plot) significa que la unidad de medida en el eje X es igual a la unidad de medida en el eje Y. Es decir, se fuerza que:

1 unidad en el eje horizontal tiene el mismo tamaño visual que 1 unidad en el eje vertical.
"
```

```{r}
"Utilizar aspect.ratio = 1 en un diagrama de dispersión (scatter plot) significa que la unidad de medida en el eje X es igual a la unidad de medida en el eje Y. Es decir, se fuerza que:

1 unidad en el eje horizontal tiene el mismo tamaño visual que 1 unidad en el eje vertical.
"
```

```{r}
"
La ciencia de datos es una disciplina que se encarga de extraer conocimiento útil a partir de datos. Combina programación, matemáticas, estadística y conocimiento del área para entender patrones, responder preguntas o tomar decisiones basadas en datos.

Es como una caja de herramientas para convertir datos crudos en información valiosa, ya sea para predecir algo, explicar un fenómeno o automatizar decisiones.

La estadística es el corazón de la ciencia de datos. Sirve para:

Describir y resumir los datos (media, varianza, gráficos).

Inferir cosas sobre una población a partir de una muestra (estimaciones, intervalos, tests).

Modelar relaciones entre variables (regresión, clasificación).

Medir incertidumbre y validar resultados.

En resumen, la estadística permite que los análisis sean rigurosos y confiables, y no solo visualmente atractivos o impulsados por algoritmos.

La ciencia de datos transforma datos en decisiones. Y la estadística es la parte que asegura que esas decisiones estén basadas en evidencia y no en casualidades."


"La ciencia de datos es una disciplina que combina herramientas de la informática, la estadística y el conocimiento del área de estudio para extraer conocimiento útil a partir de los datos. Implica todo un proceso: desde recolectar y limpiar los datos, analizarlos e interpretarlos, hasta comunicar los resultados de forma clara y comprensible para tomar decisiones informadas.

La estadística es una parte clave de la ciencia de datos porque:

Permite describir los datos con medidas como la media, la mediana, las distribuciones, etc.

Ayuda a entender relaciones entre variables (por ejemplo, con regresiones, correlaciones).

Proporciona métodos para hacer inferencias: es decir, sacar conclusiones sobre una población a partir de una muestra.

Sirve para evaluar la incertidumbre y la calidad de los resultados (por ejemplo, con intervalos de confianza y tests de hipótesis).

La estadística es el motor analítico de la ciencia de datos: aporta los fundamentos para entender los datos y justificar las decisiones que se toman a partir de ellos."
```

```{r}
library(tidymodels)
library(rpart.plot)
library(vip)
split <- initial_split(lending_club, 0.7)
train <- training(split)
test <- testing(split)

```

```{r}
receta <- recipe(Class~., data =train) |>
  step_impute_median(all_numeric_predictors()) |>
  step_normalize(all_numeric_predictors())

```

```{r}
arbol <- decision_tree() |> set_engine("rpart") |> set_mode("classification")
wf_lend <- workflow() |> add_model(arbol) |> add_recipe(receta)
ajuste_arbol <- fit(wf_lend, data =  train)

pred <- predict(ajuste_arbol, test) |> bind_cols(test)
```

```{r}
pred1 <- predict(ajuste_arbol, train) |> bind_cols(train)
metricas <- metric_set(accuracy)
pred1 |> metricas(truth = Class, estimate = .pred_class)

```

```{r}
conf_mat(pred1, truth = Class, estimate = .pred_class) |> autoplot(type = "heatmap")

```

```{r}
modelo_rpart <- extract_fit_parsnip(ajuste_arbol)

rpart.plot(modelo_rpart$fit)
```

```{r}
logit <- logistic_reg() |> set_engine("glm") |> set_mode("classification")
wf_lend <- workflow() |> add_model(logit) |> add_recipe(receta)
ajuste_arbol <- fit(wf_lend ,data = train)

pred2 <- predict(ajuste_arbol, test) |> bind_cols(test)
```


```{r}
pred3 <- predict(ajuste_arbol, train) |> bind_cols(train)
pred1 |> metricas(truth = Class,estimate = .pred_class)
pred3 |> metricas(truth = Class,estimate = .pred_class)

```

```{r}
modelo_logit <- extract_fit_parsnip(ajuste_arbol)
vip(modelo_logit$fit)
```

